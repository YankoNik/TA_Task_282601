
/***************************************************************************************************************/
/* Function: dbo.[TRANS_VAL_TO_VAL_TA] */
CREATE OR ALTER FUNCTION [dbo].[TRANS_VAL_TO_VAL_TA]( @SUMA AS FLOAT, @VAL AS CHAR(3), @VAL1 AS CHAR(3) )
RETURNS FLOAT
AS
BEGIN
	IF( @SUMA IS NULL OR @SUMA = 0.0 )
		RETURN 0.0

	DECLARE @FIXING AS FLOAT, @BASE AS INT, @FIXING1 AS FLOAT, @BASE1 AS INT, @PRE AS SMALLINT

	SELECT	@FIXING1 = [FIXING], @BASE1 = [BASE] , @PRE = NULL
	FROM 	[CURRENCIES_TA] WITH (NOLOCK)
	WHERE	[CODE] = @VAL1

	/* Ако двете валути са еднакви връщаме входната сума */
	IF( @VAL IS NULL OR @VAL = @VAL1 )
		RETURN ROUND( ISNULL( @SUMA, 0.0 ), ISNULL( @PRE , 2 ))

	SELECT	@FIXING = [FIXING], @BASE = [BASE]
	FROM 	[CURRENCIES_TA] WITH (NOLOCK)
	WHERE	[CODE] = @VAL

	IF( ISNULL ( @BASE , 0.0 ) = 0.0 OR ISNULL ( @BASE1 , 0.0 ) = 0.0 OR ISNULL ( @FIXING , 0.0 ) = 0.0 OR ISNULL ( @FIXING1 , 0.0 ) = 0.0 )
		RETURN 0.0

	RETURN ROUND( ( @FIXING / @BASE ) * @SUMA / ( @FIXING1 / @BASE1 ) ,  ISNULL( @PRE , 2 ) )
END
GO

/***************************************************************************************************************/
/* Function: dbo.[FN_TAXES_CALCULATE_PREFFERENCE_TA] */
CREATE OR ALTER FUNCTION [dbo].[FN_TAXES_CALCULATE_PREFFERENCE_TA](
	@ROW_ID INT,
	@AMOUNT FLOAT,
	@ACCUMULATED_AMOUNT FLOAT,
	@ACCUMULATED_TAX FLOAT,
	@CURRENCY_CODE CHAR(3))
RETURNS FLOAT
AS
BEGIN 
	DECLARE @RESULT FLOAT = 0

	DECLARE @TAX_CODE INT = 0
	DECLARE @IS_DEFAULT_CURRENCY INT = 0
	DECLARE @COMMISSION_ORDER INT = 0
	DECLARE @CONSTANT_SUM FLOAT = 0
	DECLARE @PERCENTAGE FLOAT = 0
	DECLARE @CURRENCY CHAR(3) = 'X'
	DECLARE @FROM_SUM FLOAT = 0
	DECLARE @UNTIL_SUM FLOAT = 0
	DECLARE @MIN_SUM FLOAT = 0
	DECLARE @MAX_SUM FLOAT = 0
	DECLARE @PREF_WITHOUT_DAILY_TURNOVER INT = 0
	DECLARE @PREF_PERSENTAGE_BASE INT = 0
	DECLARE @PREF_PLAN_BASE_ON_DAILY_TURNOVER INT = 0

	SELECT TOP 1
		@TAX_CODE 							= [DTL].[TAX_CODE],
		@IS_DEFAULT_CURRENCY				= [DTL].[IS_DEFAULT_CURRENCY],
		@COMMISSION_ORDER					= [DTL].[COMMISSION_ORDER],
		@CONSTANT_SUM 						= [DTL].[CONSTANT_SUM],
		@PERCENTAGE 						= [DTL].[PERCENTAGE]/100,
		@CURRENCY 							= (CASE [DTL].[CURRENCY] WHEN 'X' THEN @CURRENCY_CODE ELSE [DTL].[CURRENCY] END), 
		@FROM_SUM 							= [DTL].[FROM_SUM],
		@UNTIL_SUM 							= [DTL].[UNTIL_SUM],
		@MIN_SUM 							= [DTL].[MIN_SUM],
		@MAX_SUM 							= [DTL].[MAX_SUM],
		@PREF_WITHOUT_DAILY_TURNOVER		= [DTL].[PREF_WITHOUT_DAILY_TURNOVER],
		@PREF_PERSENTAGE_BASE				= [HDR].[PREF_PERSENTAGE_BASE],
		@PREF_PLAN_BASE_ON_DAILY_TURNOVER	= [HDR].[PREF_PLAN_BASE_ON_DAILY_TURNOVER]
	FROM dbo.[TAXES_INFO_COMMISSION_TA] AS [DTL] WITH(NOLOCK)
	INNER JOIN dbo.[TAXES_INFO_TA] AS [HDR] WITH(NOLOCK)
		ON	[DTL].[TAX_CODE] = [HDR].[CODE]
		AND [DTL].[TYPE]	 = [HDR].[TYPE]
	WHERE [DTL].[ROW_ID] = @ROW_ID

	DECLARE @AMOUNT_IN_TAX_CURRENCY FLOAT = dbo.TRANS_VAL_TO_VAL_TA(@AMOUNT, @CURRENCY_CODE, @CURRENCY) 
	DECLARE @ACCUMULATED_AMOUNT_IN_TAX_CURRENCY FLOAT = dbo.TRANS_VAL_TO_VAL_TA(@ACCUMULATED_AMOUNT, @CURRENCY_CODE, @CURRENCY) 
	DECLARE @ACCUMULATED_TAX_IN_TAX_CURRENCY FLOAT = dbo.TRANS_VAL_TO_VAL_TA(@ACCUMULATED_TAX, @CURRENCY_CODE, @CURRENCY) 
	

	IF (@PREF_PLAN_BASE_ON_DAILY_TURNOVER > 0)
	BEGIN 
		IF (@AMOUNT_IN_TAX_CURRENCY + @ACCUMULATED_AMOUNT_IN_TAX_CURRENCY < @FROM_SUM OR
			@AMOUNT_IN_TAX_CURRENCY + @ACCUMULATED_AMOUNT_IN_TAX_CURRENCY > @UNTIL_SUM)
			RETURN @RESULT
	END
	ELSE 
	BEGIN 
		IF (@AMOUNT_IN_TAX_CURRENCY < @FROM_SUM OR
			 @AMOUNT_IN_TAX_CURRENCY > @UNTIL_SUM)
			RETURN @RESULT
	END
	
	IF (@PERCENTAGE > 0)
	BEGIN 
		IF (@PREF_PERSENTAGE_BASE <= 0)
			SET @RESULT = @AMOUNT_IN_TAX_CURRENCY*@PERCENTAGE
		ELSE IF (@PREF_WITHOUT_DAILY_TURNOVER <= 0)
			SET @RESULT = (@AMOUNT_IN_TAX_CURRENCY + @ACCUMULATED_AMOUNT_IN_TAX_CURRENCY)*@PERCENTAGE - @ACCUMULATED_TAX_IN_TAX_CURRENCY
		ELSE
			SET @RESULT = @AMOUNT_IN_TAX_CURRENCY*@PERCENTAGE
	END
	ELSE IF (@CONSTANT_SUM > 0)
	BEGIN 
		SET @RESULT = @CONSTANT_SUM
	END

	IF (@MIN_SUM > 0 AND @RESULT < @MIN_SUM)
		SET @RESULT = @MIN_SUM

	IF (@MAX_SUM > 0 AND @RESULT > @MAX_SUM)
		SET @RESULT = @MAX_SUM

	IF (@RESULT < 0)
		SET @RESULT = 0

	RETURN @RESULT
END
GO

/***************************************************************************************************************/
/* Function: dbo.[FN_TAXES_CALCULATE_COMMISSION_TA] */
CREATE OR ALTER FUNCTION [dbo].[FN_TAXES_CALCULATE_COMMISSION_TA](
	@ROW_ID INT,
	@AMOUNT FLOAT,
	@ACCUMULATED_AMOUNT FLOAT,
	@ACCUMULATED_TAX FLOAT,
	@CURRENCY_CODE CHAR(3))
RETURNS FLOAT
AS
BEGIN 
	DECLARE @RESULT FLOAT = 0

	DECLARE @TAX_CODE INT
	DECLARE @IS_DEFAULT_CURRENCY INT
	DECLARE @COMMISSION_ORDER INT
	DECLARE @CONSTANT_SUM FLOAT
	DECLARE @PERCENTAGE FLOAT
	DECLARE @CURRENCY CHAR(3)
	DECLARE @FROM_SUM FLOAT
	DECLARE @UNTIL_SUM FLOAT
	DECLARE @MIN_SUM FLOAT
	DECLARE @MAX_SUM FLOAT
	DECLARE @TAX_OVER_SUM INT
	DECLARE @INCLUDE_TAX_IN_MIN_MAX INT

	SELECT 
		@TAX_CODE				= [TAX_CODE],
		@IS_DEFAULT_CURRENCY	= [IS_DEFAULT_CURRENCY],
		@COMMISSION_ORDER		= [COMMISSION_ORDER],
		@CONSTANT_SUM			= [CONSTANT_SUM],
		@PERCENTAGE				= [PERCENTAGE]/100,
		@CURRENCY				= (CASE [CURRENCY] WHEN 'X' THEN @CURRENCY_CODE ELSE [CURRENCY] END), 
		@FROM_SUM				= [FROM_SUM],
		@UNTIL_SUM				= [UNTIL_SUM],
		@MIN_SUM				= [MIN_SUM],
		@MAX_SUM				= [MAX_SUM],
		@TAX_OVER_SUM			= [TAX_OVER_SUM],
		@INCLUDE_TAX_IN_MIN_MAX = [INCLUDE_TAX_IN_MIN_MAX]
	FROM dbo.[TAXES_INFO_COMMISSION_TA] WITH(NOLOCK)
	WHERE ROW_ID = @ROW_ID

	DECLARE @ACCUMULATED_AMOUNT_IN_TAX_CURRENCY FLOAT = dbo.TRANS_VAL_TO_VAL_TA(@ACCUMULATED_AMOUNT + @AMOUNT, @CURRENCY_CODE, @CURRENCY) 

	IF (@ACCUMULATED_AMOUNT_IN_TAX_CURRENCY < @FROM_SUM OR
		@ACCUMULATED_AMOUNT_IN_TAX_CURRENCY > @UNTIL_SUM)
		RETURN @RESULT

	IF (@TAX_OVER_SUM <= 0)
	BEGIN

		IF (@INCLUDE_TAX_IN_MIN_MAX > 0 AND @CONSTANT_SUM > 0)
			SET @RESULT = @RESULT + @CONSTANT_SUM

		IF (@PERCENTAGE > 0)
			SET @RESULT = @RESULT + @ACCUMULATED_AMOUNT_IN_TAX_CURRENCY*@PERCENTAGE

		IF (@MIN_SUM > 0 AND @RESULT < @MIN_SUM)
			SET @RESULT = @MIN_SUM

		IF (@MAX_SUM > 0 AND @RESULT > @MAX_SUM)
			SET @RESULT = @MAX_SUM

		IF (@INCLUDE_TAX_IN_MIN_MAX <= 0 AND @CONSTANT_SUM > 0)
			SET @RESULT = @RESULT + @CONSTANT_SUM
	END
	ELSE
	BEGIN

		IF (@INCLUDE_TAX_IN_MIN_MAX > 0 AND @CONSTANT_SUM > 0)
			SET @RESULT = @RESULT + @CONSTANT_SUM

		IF (@FROM_SUM IS NULL)
			RETURN @RESULT

		IF (@PERCENTAGE > 0)
			SET @RESULT = @RESULT + (@ACCUMULATED_AMOUNT_IN_TAX_CURRENCY - @FROM_SUM - 0.01)*@PERCENTAGE

		IF (@ACCUMULATED_TAX > 0)
			SET @RESULT = @RESULT - @ACCUMULATED_TAX

		IF (@MIN_SUM > 0 AND @RESULT + @ACCUMULATED_TAX < @MIN_SUM)
			SET @RESULT = @MIN_SUM - @ACCUMULATED_TAX

		IF (@MAX_SUM > 0 AND @RESULT + @ACCUMULATED_TAX > @MAX_SUM)
			SET @RESULT = @MAX_SUM - @ACCUMULATED_TAX

		IF (@INCLUDE_TAX_IN_MIN_MAX <= 0 AND @CONSTANT_SUM > 0)
			SET @RESULT = @RESULT + @CONSTANT_SUM
	END


	IF (@RESULT < 0)
		SET @RESULT = 0

	RETURN @RESULT
END
GO
